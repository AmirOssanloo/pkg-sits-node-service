name: Frontend CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  client:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check environment variables
        run: |
          echo "Debugging environment variables"
          if [ -z "$GH_PKG_PRODUCE_TOKEN" ]; then
            echo "‚ùå GH_PKG_PRODUCE_TOKEN is not set";
          else
            echo "‚úÖ GH_PKG_PRODUCE_TOKEN is set";
          fi
        env:
          GH_PKG_PRODUCE_TOKEN: ${{ secrets.GH_PKG_PRODUCE_TOKEN }}

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Enable Corepack and install Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.6.0 --activate
          yarn set version 4.6.0
        env:
          GH_PKG_PRODUCE_TOKEN: ${{ secrets.GH_PKG_PRODUCE_TOKEN }}

      - name: Debug environment information
        run: |
          echo "Debugging environment information"
          echo "-----------------------------------"
          echo "Node version: $(node -v)"
          echo "Yarn version: $(yarn -v)"
        env:
          GH_PKG_PRODUCE_TOKEN: ${{ secrets.GH_PKG_PRODUCE_TOKEN }}

      - name: Install dependencies
        run: |
          echo "üèÅ Installing dependencies..."
          yarn install
          if [ -z "$GH_PKG_PRODUCE_TOKEN" ]; then
            echo "‚ùå GH_PKG_PRODUCE_TOKEN is not set";
          else
            echo "‚úÖ GH_PKG_PRODUCE_TOKEN is set";
          fi
        env:
          GH_PKG_PRODUCE_TOKEN: ${{ secrets.GH_PKG_PRODUCE_TOKEN }}

      - name: Build package
        run: |
          yarn build || (echo "‚ùå Build failed!" && exit 1)
          if [ -z "$GH_PKG_PRODUCE_TOKEN" ]; then
            echo "‚ùå GH_PKG_PRODUCE_TOKEN is not set";
          else
            echo "‚úÖ GH_PKG_PRODUCE_TOKEN is set";
          fi
        env:
          GH_PKG_PRODUCE_TOKEN: ${{ secrets.GH_PKG_PRODUCE_TOKEN }}

      - name: Check lint
        run: yarn lint || (echo "‚ùå Lint failed!" && exit 1)
        env:
          GH_PKG_PRODUCE_TOKEN: ${{ secrets.GH_PKG_PRODUCE_TOKEN }}

      - name: Check types
        run: |
          yarn types || (echo "‚ùå Type checking failed!" && exit 1)
          if [ -z "$GH_PKG_PRODUCE_TOKEN" ]; then
            echo "‚ùå GH_PKG_PRODUCE_TOKEN is not set";
          else
            echo "‚úÖ GH_PKG_PRODUCE_TOKEN is set";
          fi
        env:
          GH_PKG_PRODUCE_TOKEN: ${{ secrets.GH_PKG_PRODUCE_TOKEN }}
