name: Frontend CI

on:
  push:
    branches: [master]
    paths:
      - 'client/**'
      - 'shared/**'
      - 'package.json'
  pull_request:
    paths:
      - 'client/**'
      - 'shared/**'
      - 'package.json'
  workflow_dispatch:

jobs:
  client:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: |
            yarn.lock
            client/yarn.lock

      - name: Enable Corepack and install Yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate

      - name: Debug info
        run: |
          echo "Debugging Environment Information"
          echo "-----------------------------------"
          echo "Node version: $(node -v)"
          echo "Yarn version: $(yarn -v)"
          if [ -z "$GH_PKG_CONSUME_TOKEN" ]; then
            echo "‚ùå GH_PKG_CONSUME_TOKEN is not set";
          else
            echo "‚úÖ GH_PKG_CONSUME_TOKEN is set";
          fi
          echo "-----------------------------------"
          echo "Workspaces"
          yarn workspaces list --json
        env:
          GH_PKG_CONSUME_TOKEN: ${{ secrets.GH_PKG_CONSUME_TOKEN }}

      - name: Install dependencies
        run: |
          echo "üèÅ Installing dependencies..."
          yarn workspaces focus @sits-astra/astra-client
        env:
          GH_PKG_CONSUME_TOKEN: ${{ secrets.GH_PKG_CONSUME_TOKEN }}

      - name: Build package
        working-directory: client
        run: yarn build || (echo "‚ùå Build failed!" && exit 1)
        env:
          GH_PKG_CONSUME_TOKEN: ${{ secrets.GH_PKG_CONSUME_TOKEN }}

      - name: Check lint
        working-directory: client
        run: |
          yarn lint || (echo "‚ùå Lint failed!" && exit 1)

      - name: Check types
        working-directory: client
        run: |
          yarn types || (echo "‚ùå Type checking failed!" && exit 1)
